"use strict";var console=console||{},dependencies=["ui.router","ngAnimate","ngResource","ngTouch","ngSanitize","ngCookies","ui.bootstrap","http-auth-interceptor","toastr","angular-loading-bar","NotesApp.controllers","NotesApp.page-login","NotesApp.page-notes"];angular.module("NotesApp",dependencies).config(["$stateProvider","$urlRouterProvider",function(t,e){e.when("/","/notes"),e.when("","/notes")}]).config(["$locationProvider",function(t){t.html5Mode(!0)}]).config(["toastrConfig",function(t){angular.extend(t,{allowHtml:!0,positionClass:"toast-bottom-right"})}]).config(["$httpProvider",function(t){t.defaults.headers.post["Content-Type"]="application/x-www-form-urlencoded;charset=utf-8",t.defaults.headers.put["Content-Type"]="application/x-www-form-urlencoded;charset=utf-8";var e=function(t){var o,r,n,s,a,i,l,u="";for(o in t)if(r=t[o],r instanceof Array){for(l=0;l<r.length;++l)a=r[l],n=o+"["+l+"]",i={},i[n]=a,u+=e(i)+"&";0==r.length&&(u+=encodeURIComponent(o)+"=&")}else if(r instanceof Object)for(s in r)a=r[s],n=o+"["+s+"]",i={},i[n]=a,u+=e(i)+"&";else void 0!==r&&null!==r&&(u+=encodeURIComponent(o)+"="+encodeURIComponent(r)+"&");return u.length?u.substr(0,u.length-1):u};t.defaults.transformRequest=[function(t){return angular.isObject(t)&&"[object File]"!==String(t)?e(t):t}]}]).config(["$httpProvider",function(t){t.defaults.headers.post["Content-Type"]="application/x-www-form-urlencoded;charset=utf-8"}]).config(["$httpProvider",function(t){t.defaults.headers.common["X-Requested-With"]="XMLHttpRequest"}]).run(["$rootScope","$state",function(t,e){Array.prototype.indexOf||(Array.prototype.indexOf=function(t,e){for(var o=e||0,r=this.length;r>o;o++)if(this[o]===t)return o;return-1}),t.$on("event:auth-loginRequired",function(t,o){"Unauthorized"==o.statusText&&e.go("login")})}]),angular.module("NotesApp.controllers",[]).controller("BaseCtrl",["$rootScope","$scope","$state","$stateParams","$location",function(t,e,o,r,n){}]),angular.module("NotesApp.page-login",["NotesApp.page-login.controllers","NotesApp.page-login.services"]).config(["$stateProvider",function(t){t.state("login",{url:"/login",templateUrl:"/tpls/login.html",controller:"LoginPageCtrl"})}]),angular.module("NotesApp.page-login.controllers",[]).controller("LoginPageCtrl",["$scope","$state","$http","toastr",function(t,e,o,r){t.user={username:"",password:""},t.formErrors=[],t.submit=function(n){if(n){t.formErrors=[];var s={method:"POST",url:"/api/auth",data:{username:t.user.username,password:t.user.password}};o(s).success(function(o,n,s,a){t.formErrors=o.errors,0==o.errors.length&&(r.success("Logged in successfully"),e.go("notes"))}).error(function(e,o,r,n){t.formErrors=e.errors})}}}]),angular.module("NotesApp.page-notes.services",[]).factory("Context",["$resource",function(t){return t("/cms-api/context/:contextId",{contextId:"@contextId"},{put:{method:"PUT",isArray:!1},get:{method:"GET"},post:{method:"POST",isArray:!1}})}]).factory("ContextListingData",["$q","Context",function(t,e){return function(){var o=t.defer();return e.get(function(t){o.resolve(t)},function(){o.reject("Unable to fetch data")}),o.promise}}]),angular.module("NotesApp.page-notes",["NotesApp.page-notes.controllers","NotesApp.page-notes.services"]).config(["$stateProvider",function(t){t.state("notes",{url:"/notes?{page}",templateUrl:"/tpls/notes-listing.html",controller:"NotesPageCtrl",resolve:{NotesListingData:["NotesListingData","$stateParams",function(t,e){return t(e)}]}}).state("notes-add",{url:"/notes/add",templateUrl:"/tpls/notes-add.html",controller:"NotesAddPageCtrl"}).state("notes-edit",{url:"/notes/:id",templateUrl:"/tpls/notes-edit.html",controller:"NotesEditPageCtrl",resolve:{NoteData:["NoteData","$stateParams",function(t,e){return t(e)}]}})}]),angular.module("NotesApp.page-notes.controllers",[]).controller("NotesPageCtrl",["$scope","$state","NotesListingData","Notes","toastr",function(t,e,o,r,n){t.notes=o.items,t.pagination=o.pagination,t.goToItem=function(t){e.go("notes-edit",{id:t})},t.$watch("pagination.currentPage",function(t,o){if("undefined"!=typeof t&&t!=o){var r=e.params;r.page=t>1?t:null,e.go(e.current.name,r,{notify:!0,reload:!0})}})}]).controller("NotesAddPageCtrl",["$scope","$state","Notes","toastr",function(t,e,o,r){t.note={title:"",text:""},t.formErrors=[],t.submit=function(n){n&&(t.formErrors=[],o.post({},{title:t.note.title,text:t.note.text},function(o){t.formErrors=o.errors,0==o.errors.length?(r.success("Saved Successfully"),e.go("notes")):r.error("Oops...  The form has errors!")},function(t){r.error("Oops...  There was a problem!")}))}}]).controller("NotesEditPageCtrl",["$scope","$state","NoteData","Notes","toastr",function(t,e,o,r,n){t.note={title:o.note.title,text:o.note.text},t.formErrors=[],t.submit=function(o){o&&(t.formErrors=[],r.put({id:e.params.id,page:1},{title:t.note.title,text:t.note.text},function(o){t.formErrors=o.errors,0==o.errors.length?(n.success("Saved Successfully"),e.go("notes")):n.error("Oops...  The form has errors!")},function(t){n.error("Oops...  There was a problem!")}))}}]),angular.module("NotesApp.page-login.services",[]).factory("Notes",["$resource",function(t){return t("/api/note/page/:page/:id",{id:"@id"},{put:{method:"PUT",isArray:!1},get:{method:"GET"},post:{method:"POST",isArray:!1}})}]).factory("NotesListingData",["$q","Notes",function(t,e){return function(o){var r=t.defer();return e.get({page:o.page?o.page:"1"},function(t){r.resolve(t)},function(){r.reject("Unable to fetch data")}),r.promise}}]).factory("NoteData",["$q","Notes",function(t,e){return function(o){var r=t.defer();return e.get({id:o.id,page:1},function(t){r.resolve(t)},function(){r.reject("Unable to fetch data")}),r.promise}}]);